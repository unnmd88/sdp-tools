"""create users table

Revision ID: 5f37c8f93ce9
Revises:
Create Date: 2025-10-29 10:43:05.436508

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '5f37c8f93ce9'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('first_name', sa.String(length=32), nullable=False),
        sa.Column('last_name', sa.String(length=32), nullable=False),
        sa.Column('organization', sa.String(length=32), nullable=False),
        sa.Column('username', sa.String(length=32), nullable=False),
        sa.Column('email', sa.String(), server_default='', nullable=False),
        sa.Column('password', sa.LargeBinary(), nullable=False),
        sa.Column(
            'is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False
        ),
        sa.Column(
            'is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False
        ),
        sa.Column(
            'is_superuser',
            sa.Boolean(),
            server_default=sa.text('false'),
            nullable=False,
        ),
        sa.Column('role', sa.String(length=32), nullable=False),
        sa.Column(
            'phone_number', sa.String(length=32), server_default='', nullable=False
        ),
        sa.Column('telegram', sa.String(length=32), server_default='', nullable=False),
        sa.Column('description', sa.String(), server_default='', nullable=False),
        sa.Column(
            'created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.Column(
            'updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
        sa.UniqueConstraint('username', name=op.f('uq_users_username')),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    # ### end Alembic commands ###
