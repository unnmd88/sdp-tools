"""create users table

Revision ID: a54ee96794d4
Revises:
Create Date: 2025-10-28 21:07:43.450593

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a54ee96794d4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('first_name', sa.String(length=32), nullable=False),
        sa.Column('last_name', sa.String(length=32), nullable=False),
        sa.Column('organization', sa.String(length=32), nullable=False),
        sa.Column('username', sa.String(length=32), nullable=False),
        sa.Column('email', sa.String(), server_default='', nullable=False),
        sa.Column('password', sa.LargeBinary(), nullable=False),
        sa.Column(
            'is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False
        ),
        sa.Column(
            'is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False
        ),
        sa.Column(
            'is_superuser',
            sa.Boolean(),
            server_default=sa.text('false'),
            nullable=False,
        ),
        sa.Column('role', sa.String(length=32), nullable=False),
        sa.Column(
            'phone_number', sa.String(length=32), server_default='', nullable=False
        ),
        sa.Column('telegram', sa.String(length=32), server_default='', nullable=False),
        sa.Column('description', sa.String(), server_default='', nullable=False),
        sa.Column(
            'created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.Column(
            'updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
        sa.UniqueConstraint('email', name=op.f('uq_users_email')),
        sa.UniqueConstraint('password', name=op.f('uq_users_password')),
        sa.UniqueConstraint('username', name=op.f('uq_users_username')),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    # ### end Alembic commands ###
